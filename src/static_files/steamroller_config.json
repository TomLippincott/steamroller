
{

    "DEFAULTS" : {
	"GRID" : false,
	"GRID_RESOURCES" : [],
	"LOGGING" : "INFO"
    },

    // Has either one FILE field, TRAIN and TEST fields, or TRAIN and DEV and TEST fields, in all cases pointing to DataFiles
    "DATA_SETS" : {
	"Code versus Comments" : {
	    "FILE" : "tasks/code_versus_comments.json.gz"	 
	}
    },

    // COMMAND has signature: [DataFile] -> FeatureFile
    "FEATURE_EXTRACTORS" : {
	"Character N-grams" : {
	    "COMMAND" : "python -m steamroller.extractors.ngram --level character --n ${N} --tag ${TAG_TYPE} --input ${SOURCES[0]} --output ${TARGETS[0]}"
	},
	"Word N-grams" : {
	    "COMMAND" : "python -m steamroller.extractors.ngram --level word --n ${N} --tag ${TAG_TYPE} --input ${SOURCES[0]} --output ${TARGETS[0]}"
	}
    },

    // COMMAND has signature: [FeatureFile] -> FeatureFile
    "FEATURE_TRANSFORMERS" : {
	"Combine" : {
	    "COMMAND" : "python -m steamroller.transforms.combine ${SOURCES} --output ${TARGETS[0]}"
	}
    },

    // TRAIN_COMMAND has signature: FeatureFile -> ModelFile
    // APPLY_COMMAND has signature: (ModelFile, FeatureFile) -> ProbabilityFile
    "MODEL_TYPES" : {

	"NaiveBayes" : {
	    "TRAIN_COMMAND" : "python -m steamroller.models.scikit_learn --tag ${TAG_TYPE} --model-type naive_bayes --train ${SOURCES[0]} --input ${SOURCES[1]} --max_ngram ${MAX_NGRAM} --output ${TARGETS[0]}",
	    "APPLY_COMMAND" : "python -m steamroller.models.scikit_learn --tag ${TAG_TYPE} --model-type naive_bayes --model ${SOURCES[0]} --test ${SOURCES[1]} --input ${SOURCES[2]} --max_ngram ${MAX_NGRAM} --output ${TARGETS[0]}"
	},

	"SVM" : {
	    "TRAIN_COMMAND" : "python -m steamroller.models.scikit_learn --tag ${TAG_TYPE} --model-type svm --train ${SOURCES[0]} --input ${SOURCES[1]} --max_ngram ${MAX_NGRAM} --output ${TARGETS[0]}",
	    "APPLY_COMMAND" : "python -m steamroller.models.scikit_learn --tag ${TAG_TYPE} --model-type svm --model ${SOURCES[0]} --test ${SOURCES[1]} --input ${SOURCES[2]} --max_ngram ${MAX_NGRAM} --output ${TARGETS[0]}"
	},

	"RandomForest" : {
	    "TRAIN_COMMAND" : "python -m steamroller.models.scikit_learn --tag ${TAG_TYPE} --model-type random_forest --train ${SOURCES[0]} --input ${SOURCES[1]} --max_ngram ${MAX_NGRAM} --output ${TARGETS[0]}",
	    "APPLY_COMMAND" : "python -m steamroller.models.scikit_learn --tag ${TAG_TYPE} --model-type random_forest --model ${SOURCES[0]} --test ${SOURCES[1]} --input ${SOURCES[2]} --max_ngram ${MAX_NGRAM} --output ${TARGETS[0]}"
	},
	
	"LogisticRegression" : {
	    "TRAIN_COMMAND" : "python -m steamroller.models.scikit_learn --tag ${TAG_TYPE} --model-type logistic_regression --train ${SOURCES[0]} --input ${SOURCES[1]} --max_ngram ${MAX_NGRAM} --output ${TARGETS[0]}",
	    "APPLY_COMMAND" : "python -m steamroller.models.scikit_learn --tag ${TAG_TYPE} --model-type logistic_regression --model ${SOURCES[0]} --test ${SOURCES[1]} --input ${SOURCES[2]} --max_ngram ${MAX_NGRAM} --output ${TARGETS[0]}"
	}
    },

    // COMMAND has signature: ProbabilityFile|ModelFile -> MeasurementFile
    "MEASUREMENTS" : {
	"Macro F-Score" : {
	    "COMMAND" : "tailor ${SOURCES} ${TARGETS}"
	}
    },

    // COMMAND has signature: [MeasurementFile] -> ImageFile
    "VISUALIZATIONS" : {
	"Whisker plot" : {
	    "COMMAND" : "imaginer ${SOURCES} ${TARGETS}"
	}
    },

    // References to preceding fields
    "EXPERIMENTS" : {
	"Sentiment classification" : {
	    // if specified, DOWN_SAMPLE is a list of either triplets of integers (TRAIN/DEV/TEST), or a real number indicating a proportion
	    //"DOWN_SAMPLE" : [],
	    
	    // if specified, FOLDS is number of times to randomly run each size of SUB_EXPERIMENT
	    //"FOLDS" : 3,
	    
	    // indicate the relevant data sets and corresponding fields for ID, label, and text
	    "DATA_SETS" : {
		"Code versus Comments" : {"ID_FIELD" : "_id",
					  "LABEL_FIELD" : "_label",
					  "TEXT_FIELD" : "_text"
					 }
	    },

	    "FEATURE_EXTRACTORS" : {
		"Character N-grams" : {"N" : 3},
		"Word N-grams" : {"N" : 3}
	    },
	    
	    // 
	    "MODEL_TYPES" : {
		"NaiveBayes" : {},
		"LogisticRegression" : {}
	    }
	    
	    // each MEASUREMENT is applied to each EXPERIMENT
	    //"MEASUREMENTS" : {
		//"Macro F-Score" : {}
	    //},
	    
	    // each VISUALIZATION will be applied to each MEASUREMENT
	    //"VISUALIZATIONS" : {
		//"Whisker plot" : {}
	    //}
	}
    }
}
